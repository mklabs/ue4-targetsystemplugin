name: (Linux) Build Plugin

on:
  pull_request:
    branches: [ master ]

jobs:
  linux-build-plugin:
    name: Build & Test (Linux)

    if: github.actor == 'mklabs'
    runs-on: [self-hosted, Windows]

    strategy:
      matrix:
        unreal: ['5.1', '5.2', '5.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Docker container
        run: |
          echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker run -td --name unreal-${{ matrix.unreal }} --user root -v ${{ github.workspace }}:/${{ github.repository }} --workdir /${{ github.repository }}/TargetSystem ghcr.io/epicgames/unreal-engine:dev-slim-${{ matrix.unreal }}
            
      - name: Installing Linux Dependencies
        run: |
          docker exec unreal-${{ matrix.unreal }} sudo apt-get update
          docker exec unreal-${{ matrix.unreal }} pip3 install --upgrade pip
          
      - name: Installing UE CLI
        run: docker exec unreal-${{ matrix.unreal }} pip3 install ue4cli

      - name: Configuring UE CLI
        run: docker exec unreal-${{ matrix.unreal }} ue4 setroot /home/ue4/UnrealEngine

      - name: Package plugin
        run: docker exec unreal-${{ matrix.unreal }} ue4 package -StrictIncludes

      - name: rm container
        if: always()
        run: |
          docker stop unreal-${{ matrix.unreal }}
          docker rm unreal-${{ matrix.unreal }}

  # to run on github hosted runners

  # linux-build-plugin:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       unreal: ['5.0', '5.1']

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Free disk space
  #       if: ${{ steps.exists.outputs.value == 0 }}
  #       run: |
  #         # time df -h
  #         sudo time swapoff -a
  #         sudo time rm -f /swapfile
  #         sudo time rm -rf /usr/local/lib/android
  #         sudo time rm -rf /usr/share/dotnet
  #         sudo time rm -rf /usr/share/swift
  #         sudo time rm -rf /usr/local/.ghcup
  #         sudo time rm -rf /usr/local/lib/node_modules
  #         sudo time rm -rf /usr/lib/google-cloud-sdk
  #         sudo time rm -rf /opt/pipx
  #         sudo time rm -rf "$AGENT_TOOLSDIRECTORY"
  #         sudo time apt-get clean
  #         sudo time rm -rf /var/lib/apt/lists/*
  #         # time docker rmi $(docker image ls -aq)
  #         # time du --max-depth=3 --threshold=100M -h /usr /opt /var 2>/dev/null | sort -hr
  #         df -h

  #     - name: Run Docker container
  #       run: |
  #         echo ${{ secrets.DOCKER_TOKEN }} | docker login ghcr.io -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
  #         docker run -td --name unreal --user root \
  #           -v ${{ github.workspace }}:/ue4-targetsystemplugin \
  #           --workdir /ue4-targetsystemplugin/TargetSystem \
  #           ghcr.io/epicgames/unreal-engine:dev-slim-${{ matrix.unreal }}

  #     - name: Installing Linux Dependencies
  #       run: |
  #         docker exec unreal sudo apt-get update
  #         docker exec unreal pip3 install --upgrade pip

  #     - name: Installing UE CLI
  #       run:
  #         docker exec unreal pip3 install ue4cli

  #     - name: Configuring UE CLI
  #       run:
  #         docker exec unreal ue4 setroot /home/ue4/UnrealEngine

  #     - name: Package plugin
  #       run: docker exec unreal ue4 package